/*
 * generated by Xtext 2.21.0
 */
package xtext.robocode.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import xtext.robocode.ide.contentassist.antlr.internal.InternalGeneratorParser;
import xtext.robocode.services.GeneratorGrammarAccess;

public class GeneratorParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GeneratorGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GeneratorGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getRobotAccess().getAlternatives(), "rule__Robot__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getActionAccess().getAlternatives_3(), "rule__Action__Alternatives_3");
			builder.put(grammarAccess.getEventTypeAccess().getAlternatives(), "rule__EventType__Alternatives");
			builder.put(grammarAccess.getArenaAccess().getGroup(), "rule__Arena__Group__0");
			builder.put(grammarAccess.getArenaAccess().getGroup_2(), "rule__Arena__Group_2__0");
			builder.put(grammarAccess.getArenaAccess().getGroup_2_3(), "rule__Arena__Group_2_3__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup(), "rule__Robot_Impl__Group__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_4(), "rule__Robot_Impl__Group_4__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_4_3(), "rule__Robot_Impl__Group_4_3__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_5(), "rule__Robot_Impl__Group_5__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_5_3(), "rule__Robot_Impl__Group_5_3__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_6(), "rule__Robot_Impl__Group_6__0");
			builder.put(grammarAccess.getRobot_ImplAccess().getGroup_6_3(), "rule__Robot_Impl__Group_6_3__0");
			builder.put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
			builder.put(grammarAccess.getEventAccess().getGroup_3(), "rule__Event__Group_3__0");
			builder.put(grammarAccess.getEventAccess().getGroup_4(), "rule__Event__Group_4__0");
			builder.put(grammarAccess.getEventAccess().getGroup_4_3(), "rule__Event__Group_4_3__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_2(), "rule__Action__Group_2__0");
			builder.put(grammarAccess.getActionAccess().getGroup_6(), "rule__Action__Group_6__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup(), "rule__AdvancedRobot_Impl__Group__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_4(), "rule__AdvancedRobot_Impl__Group_4__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_4_3(), "rule__AdvancedRobot_Impl__Group_4_3__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_5(), "rule__AdvancedRobot_Impl__Group_5__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_5_3(), "rule__AdvancedRobot_Impl__Group_5_3__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_6(), "rule__AdvancedRobot_Impl__Group_6__0");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getGroup_6_3(), "rule__AdvancedRobot_Impl__Group_6_3__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup(), "rule__RangeControlRobot__Group__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_4(), "rule__RangeControlRobot__Group_4__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_4_3(), "rule__RangeControlRobot__Group_4_3__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_5(), "rule__RangeControlRobot__Group_5__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_5_3(), "rule__RangeControlRobot__Group_5_3__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_6(), "rule__RangeControlRobot__Group_6__0");
			builder.put(grammarAccess.getRangeControlRobotAccess().getGroup_6_3(), "rule__RangeControlRobot__Group_6_3__0");
			builder.put(grammarAccess.getArenaAccess().getRobotAssignment_2_2(), "rule__Arena__RobotAssignment_2_2");
			builder.put(grammarAccess.getArenaAccess().getRobotAssignment_2_3_1(), "rule__Arena__RobotAssignment_2_3_1");
			builder.put(grammarAccess.getRobot_ImplAccess().getNameAssignment_2(), "rule__Robot_Impl__NameAssignment_2");
			builder.put(grammarAccess.getRobot_ImplAccess().getEventsHandledAssignment_4_2(), "rule__Robot_Impl__EventsHandledAssignment_4_2");
			builder.put(grammarAccess.getRobot_ImplAccess().getEventsHandledAssignment_4_3_1(), "rule__Robot_Impl__EventsHandledAssignment_4_3_1");
			builder.put(grammarAccess.getRobot_ImplAccess().getRunActionsAssignment_5_2(), "rule__Robot_Impl__RunActionsAssignment_5_2");
			builder.put(grammarAccess.getRobot_ImplAccess().getRunActionsAssignment_5_3_1(), "rule__Robot_Impl__RunActionsAssignment_5_3_1");
			builder.put(grammarAccess.getRobot_ImplAccess().getInfiniteLoopActionsAssignment_6_2(), "rule__Robot_Impl__InfiniteLoopActionsAssignment_6_2");
			builder.put(grammarAccess.getRobot_ImplAccess().getInfiniteLoopActionsAssignment_6_3_1(), "rule__Robot_Impl__InfiniteLoopActionsAssignment_6_3_1");
			builder.put(grammarAccess.getEventAccess().getEventTypeAssignment_3_1(), "rule__Event__EventTypeAssignment_3_1");
			builder.put(grammarAccess.getEventAccess().getActionsAssignment_4_2(), "rule__Event__ActionsAssignment_4_2");
			builder.put(grammarAccess.getEventAccess().getActionsAssignment_4_3_1(), "rule__Event__ActionsAssignment_4_3_1");
			builder.put(grammarAccess.getActionAccess().getCommentAssignment_2_1(), "rule__Action__CommentAssignment_2_1");
			builder.put(grammarAccess.getActionAccess().getIsSetterAssignment_3_0(), "rule__Action__IsSetterAssignment_3_0");
			builder.put(grammarAccess.getActionAccess().getIsGetterAssignment_3_1(), "rule__Action__IsGetterAssignment_3_1");
			builder.put(grammarAccess.getActionAccess().getFunctionNameAssignment_5(), "rule__Action__FunctionNameAssignment_5");
			builder.put(grammarAccess.getActionAccess().getParametersAssignment_6_1(), "rule__Action__ParametersAssignment_6_1");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getNameAssignment_2(), "rule__AdvancedRobot_Impl__NameAssignment_2");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getEventsHandledAssignment_4_2(), "rule__AdvancedRobot_Impl__EventsHandledAssignment_4_2");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getEventsHandledAssignment_4_3_1(), "rule__AdvancedRobot_Impl__EventsHandledAssignment_4_3_1");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getRunActionsAssignment_5_2(), "rule__AdvancedRobot_Impl__RunActionsAssignment_5_2");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getRunActionsAssignment_5_3_1(), "rule__AdvancedRobot_Impl__RunActionsAssignment_5_3_1");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getInfiniteLoopActionsAssignment_6_2(), "rule__AdvancedRobot_Impl__InfiniteLoopActionsAssignment_6_2");
			builder.put(grammarAccess.getAdvancedRobot_ImplAccess().getInfiniteLoopActionsAssignment_6_3_1(), "rule__AdvancedRobot_Impl__InfiniteLoopActionsAssignment_6_3_1");
			builder.put(grammarAccess.getRangeControlRobotAccess().getNameAssignment_2(), "rule__RangeControlRobot__NameAssignment_2");
			builder.put(grammarAccess.getRangeControlRobotAccess().getEventsHandledAssignment_4_2(), "rule__RangeControlRobot__EventsHandledAssignment_4_2");
			builder.put(grammarAccess.getRangeControlRobotAccess().getEventsHandledAssignment_4_3_1(), "rule__RangeControlRobot__EventsHandledAssignment_4_3_1");
			builder.put(grammarAccess.getRangeControlRobotAccess().getRunActionsAssignment_5_2(), "rule__RangeControlRobot__RunActionsAssignment_5_2");
			builder.put(grammarAccess.getRangeControlRobotAccess().getRunActionsAssignment_5_3_1(), "rule__RangeControlRobot__RunActionsAssignment_5_3_1");
			builder.put(grammarAccess.getRangeControlRobotAccess().getInfiniteLoopActionsAssignment_6_2(), "rule__RangeControlRobot__InfiniteLoopActionsAssignment_6_2");
			builder.put(grammarAccess.getRangeControlRobotAccess().getInfiniteLoopActionsAssignment_6_3_1(), "rule__RangeControlRobot__InfiniteLoopActionsAssignment_6_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GeneratorGrammarAccess grammarAccess;

	@Override
	protected InternalGeneratorParser createParser() {
		InternalGeneratorParser result = new InternalGeneratorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GeneratorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
